apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    {{ toYaml .Values.caaas.labels | default "{}" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      caaas.application.type: api
      {{ toYaml .Values.caaas.labels | default "{}" }}
  template:
    metadata:
      labels:
        caaas.application.type: api
        {{ toYaml .Values.caaas.labels | default "{}" }}
    spec:
      initContainers:
      - name: migrate-container
        imagePullPolicy: {{ .Values.caaas.image.pullPolicy }}
        image: {{ .Values.caaas.image.repository }}:{{ .Values.caaas.image.tag }}
        env:
        - name: CAAAS_MODE
          value: "migrate"
        volumeMounts:
        - name: configmap-file  
          mountPath: "/usr/share/caass/config.yaml"
          subPath: "config.yaml"
          readOnly: true
      containers:
      - name: api-container
        imagePullPolicy: {{ .Values.caaas.image.pullPolicy }}
        image: {{ .Values.caaas.image.repository }}:{{ .Values.caaas.image.tag }}
        env:
        - name: CAAAS_MODE
          value: "api"
        ports:
        - name: http
          containerPort: {{ .Values.caaas.configs.http_server_port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        resources:
          {{- toYaml .Values.caaas.resources.gateway | nindent 10 }}
        volumeMounts:
        - name: configmap-file  
          mountPath: "/usr/share/caass/config.yaml"
          subPath: "config.yaml"
          readOnly: true
    volumes:
    - name: configmap-file  
      configMap:
        name: {{ .Release.Name }}-configmap
    restartPolicy: Never
